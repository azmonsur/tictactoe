{"version":3,"sources":["components/About.js","components/Board.js","components/PlayerInfo.js","App.js","index.js"],"names":["About","className","Board","state","rows","allowStopGame","player1","player2","clicked","players","current_player","num_row","num_col","B","game_over","invalid_move","drawBoard","props","location","i","push","setState","Array","fill","checkForWinner","c","r","length","handleButtonClick","row","map","click","idx","setTimeout","Math","floor","newCoord","player","disabled","computerToPlay","randomChoice","random","includes","this","to","pathname","style","transform","fontSize","gridTemplateColumns","gridTemplateRows","onClick","bind","history","Component","withRouter","PlayerInfo","error","isComputer","handleSubmit","e","preventDefault","toLocaleLowerCase","handleIsComputer","onSubmit","color","visibility","htmlFor","type","value","onChange","target","autoFocus","id","checked","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86f6f0a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"version-info\">\r\n        <code>\r\n          Created by Monsur (github.com/azmonsur)\r\n          <br />\r\n          V1.0.0\r\n        </code>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport About from \"./About\";\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    rows: [],\r\n    allowStopGame: null,\r\n    player1: null,\r\n    player2: null,\r\n    clicked: [],\r\n    players: [],\r\n    current_player: \"X\",\r\n    num_row: 3,\r\n    num_col: 3,\r\n    B: [\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n    ],\r\n    game_over: null,\r\n    invalid_move: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard = () => {\r\n    // Reset all states\r\n    const rows = [];\r\n    const { num_row, num_col } = this.state;\r\n\r\n    let player1 = null,\r\n      player2 = null,\r\n      allowStopGame = null;\r\n    if (this.props.location.state) {\r\n      player1 = this.props.location.state.player1;\r\n      player2 = this.props.location.state.player2;\r\n      allowStopGame = this.props.location.state.allowStopGame;\r\n    }\r\n\r\n    for (let i = 0; i < num_row * num_col; i++) {\r\n      // Create index each cell\r\n      rows.push(i);\r\n    }\r\n\r\n    this.setState({ player1 });\r\n    this.setState({ current_player: \"X\" });\r\n    this.setState({ allowStopGame });\r\n    this.setState({ player2 });\r\n    this.setState({ rows: rows });\r\n    this.setState({ clicked: new Array(num_col * num_row).fill(false) });\r\n    this.setState({ players: new Array(num_col * num_row).fill(\"\") });\r\n    this.setState({ game_over: false });\r\n    this.setState({ invalid_move: [] });\r\n    this.setState({\r\n      B: [\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n      ],\r\n    });\r\n    //this.checkForWinner();\r\n  };\r\n\r\n  checkForWinner = () => {\r\n    for (let c = 0; c < 3; c++) {\r\n      if (\r\n        this.state.B[0][c] === this.state.B[1][c] &&\r\n        this.state.B[1][c] === this.state.B[2][c] &&\r\n        this.state.B[2][c] !== 0\r\n      )\r\n        return this.state.B[0][c];\r\n    }\r\n\r\n    for (let r = 0; r < 3; r++) {\r\n      if (\r\n        this.state.B[r][0] === this.state.B[r][1] &&\r\n        this.state.B[r][1] === this.state.B[r][2] &&\r\n        this.state.B[r][2] !== 0\r\n      )\r\n        return this.state.B[r][0];\r\n    }\r\n\r\n    if (\r\n      this.state.B[0][0] === this.state.B[1][1] &&\r\n      this.state.B[1][1] === this.state.B[2][2] &&\r\n      this.state.B[1][1] !== 0\r\n    )\r\n      return this.state.B[0][0];\r\n\r\n    if (\r\n      this.state.B[2][0] === this.state.B[1][1] &&\r\n      this.state.B[1][1] === this.state.B[0][2] &&\r\n      this.state.B[0][2] !== 0\r\n    )\r\n      return this.state.B[2][0];\r\n\r\n    if (\r\n      this.state.invalid_move.length ===\r\n      this.state.num_row * this.state.num_col - 1\r\n    )\r\n      return \"d\";\r\n    return false;\r\n  };\r\n\r\n  handleButtonClick = (row) => {\r\n    // Populate invalid_move to keep track of moves\r\n    this.setState({ invalid_move: [...this.state.invalid_move, row] });\r\n\r\n    // Update clicked button\r\n    this.setState({\r\n      clicked: this.state.clicked.map((click, idx) =>\r\n        idx === row ? true : click\r\n      ),\r\n    });\r\n\r\n    // change current player\r\n    setTimeout(() => {\r\n      this.setState({\r\n        current_player: this.state.current_player === \"X\" ? \"O\" : \"X\",\r\n      });\r\n    }, 1);\r\n\r\n    const [c, r] = [\r\n      row % this.state.num_col,\r\n      Math.floor(row / this.state.num_col),\r\n    ];\r\n\r\n    const newCoord = [...this.state.B];\r\n    newCoord[r][c] = this.state.current_player;\r\n\r\n    this.setState({\r\n      B: newCoord,\r\n    });\r\n\r\n    this.setState({\r\n      players: this.state.players.map((player, idx) =>\r\n        idx !== row ? player : this.state.current_player\r\n      ),\r\n    });\r\n\r\n    this.setState({ disabled: !this.state.disabled });\r\n\r\n    if (this.checkForWinner()) {\r\n      this.setState({ game_over: true });\r\n      this.setState({ allowStopGame: false });\r\n      this.setState({ clicked: new Array(9).fill(true) });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (\r\n        this.state.player2 === \"Computer\" &&\r\n        this.state.current_player === \"O\" &&\r\n        !this.checkForWinner()\r\n      ) {\r\n        //this.setState({ current_player: \"O\" });\r\n        this.computerToPlay();\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  computerToPlay = () => {\r\n    let randomChoice = this.state.invalid_move[\r\n      Math.floor(Math.random() * this.state.invalid_move.length)\r\n    ];\r\n\r\n    randomChoice += Math.floor(Math.random() * 4);\r\n\r\n    if (randomChoice > 8) {\r\n      randomChoice -= 4;\r\n    }\r\n    while (this.state.invalid_move.includes(randomChoice)) {\r\n      randomChoice = this.state.invalid_move[\r\n        Math.floor(Math.random() * this.state.invalid_move.length)\r\n      ];\r\n      randomChoice += Math.floor(Math.random() * 5);\r\n\r\n      if (randomChoice > 8) {\r\n        randomChoice -= 5;\r\n      }\r\n    }\r\n\r\n    //this.setState({ current_player: \"O\" });\r\n    this.handleButtonClick(randomChoice);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.location.state) {\r\n      return <Redirect to={{ pathname: \"/\" }} />;\r\n    }\r\n    const { num_row, num_col } = this.state;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        {\r\n          <div\r\n            style={{\r\n              transform: this.state.game_over\r\n                ? \"translate(-50%, -50%)\"\r\n                : \"translate(-50%, -500%)\",\r\n            }}\r\n            className=\"game-over\"\r\n          >\r\n            Game Over <br />\r\n            <span style={{ fontSize: \"0.6em\" }}>\r\n              {this.checkForWinner() === \"X\"\r\n                ? `${this.state.player1} wins`\r\n                : this.checkForWinner() === \"O\"\r\n                ? `${this.state.player2} wins`\r\n                : \"It is a draw\"}\r\n            </span>\r\n          </div>\r\n        }\r\n        <div\r\n          style={{\r\n            gridTemplateColumns: `repeat(${num_col}, 1fr)`,\r\n            gridTemplateRows: `repeat(${num_row}, 1fr)`,\r\n          }}\r\n          className=\"board\"\r\n        >\r\n          {this.state.rows.map((row) => (\r\n            <button\r\n              key={row}\r\n              className={`cell ${this.state.players[row] && \"dance-anim\"}`}\r\n              disabled={this.state.clicked[row] === true}\r\n              onClick={this.handleButtonClick.bind(this, row)}\r\n            >\r\n              <span style={{ fontSize: `${(5 / num_row) * 3.5}em` }}>\r\n                {this.state.players[row]}\r\n              </span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <About />\r\n        <div className=\"action-buttons\">\r\n          <button\r\n            onClick={() => this.drawBoard()}\r\n            className=\"reset\"\r\n            disabled={!this.state.game_over}\r\n          >\r\n            Reset Board\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.history.push(\"/\")}\r\n            className=\"new-game\"\r\n            disabled={this.state.allowStopGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Board);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass PlayerInfo extends Component {\r\n  state = {\r\n    player1: \"\",\r\n    player2: \"\",\r\n    error: null,\r\n    isComputer: false,\r\n    allowStopGame: false,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { player1, player2 } = this.state;\r\n\r\n    if (!player1 || !player2) {\r\n      this.setState({\r\n        error: `Please fill all the fields`,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      player1.toLocaleLowerCase() === \"computer\" ||\r\n      (player2.toLocaleLowerCase() === \"computer\" && !this.state.isComputer) ||\r\n      player1 === player2 ||\r\n      player1.length < 2 ||\r\n      player2.length < 2\r\n    ) {\r\n      this.setState({\r\n        error: `Invalid input.`,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({ error: null });\r\n      }, 5000);\r\n      return;\r\n    }\r\n\r\n    this.props.history.push({\r\n      pathname: \"/board\",\r\n      state: {\r\n        player1: this.state.player1,\r\n        player2: this.state.player2,\r\n        allowStopGame: !this.state.allowStopGame,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleIsComputer = () => {\r\n    this.setState({ isComputer: !this.state.isComputer });\r\n\r\n    setTimeout(() => {\r\n      this.state.isComputer\r\n        ? this.setState({ player2: \"Computer\" })\r\n        : this.setState({ player2: \"\" });\r\n    }, 1);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-info\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.state.error ? (\r\n            <div style={{ color: \"red\" }} className=\"error\">\r\n              {this.state.error}\r\n            </div>\r\n          ) : (\r\n            <div style={{ visibility: \"hidden\" }}>hidden</div>\r\n          )}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Player 1</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.player1}\r\n              onChange={(e) => this.setState({ player1: e.target.value })}\r\n              autoFocus={this.state.isComputer}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Player 2</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.player2}\r\n              onChange={(e) => this.setState({ player2: e.target.value })}\r\n              disabled={this.state.isComputer}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"isComputer\"\r\n              checked={this.state.isComputer}\r\n              onChange={this.handleIsComputer}\r\n            />{\" \"}\r\n            <label htmlFor=\"isComputer\">Versus computer</label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"allowStopGame\"\r\n              checked={this.state.allowStopGame}\r\n              onChange={() =>\r\n                this.setState({ allowStopGame: !this.state.allowStopGame })\r\n              }\r\n            />{\" \"}\r\n            <label htmlFor=\"allowStopGame\">\r\n              Start new game before game is over\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">Start Game</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PlayerInfo);\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Board from \"./components/Board\";\nimport PlayerInfo from \"./components/PlayerInfo\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app-container\">\n          <Switch>\n            <Route exact path=\"/\" component={() => <PlayerInfo />} />\n            <Route exact path=\"/board\" component={() => <Board />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}