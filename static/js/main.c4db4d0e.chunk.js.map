{"version":3,"sources":["components/Board.js","App.js","index.js"],"names":["Board","state","rows","clicked","players","current_player","num_row","num_col","B","game_over","invalid_move","drawBoard","i","push","setState","Array","fill","checkForWinner","c","r","length","handleButtonClick","row","map","click","idx","Math","floor","newCoord","player","disabled","this","className","style","transform","fontSize","gridTemplateColumns","gridTemplateRows","onClick","bind","Component","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4db4d0e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    rows: [],\r\n    clicked: [],\r\n    players: [],\r\n    current_player: \"X\",\r\n    num_row: 3,\r\n    num_col: 3,\r\n    B: [\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n    ],\r\n    game_over: null,\r\n    invalid_move: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard = () => {\r\n    // Reset all states\r\n    const rows = [];\r\n    const { num_row, num_col } = this.state;\r\n\r\n    for (let i = 0; i < num_row * num_col; i++) {\r\n      // Create index each cell\r\n      rows.push(i);\r\n    }\r\n\r\n    this.setState({ rows: rows });\r\n    this.setState({ clicked: new Array(num_col * num_row).fill(false) });\r\n    this.setState({ players: new Array(num_col * num_row).fill(\"\") });\r\n    this.setState({ game_over: false });\r\n    this.setState({ invalid_move: [] });\r\n    this.setState({\r\n      B: [\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 0],\r\n      ],\r\n    });\r\n    //this.checkForWinner();\r\n  };\r\n\r\n  checkForWinner = () => {\r\n    for (let c = 0; c < 3; c++) {\r\n      if (\r\n        this.state.B[0][c] === this.state.B[1][c] &&\r\n        this.state.B[1][c] === this.state.B[2][c] &&\r\n        this.state.B[2][c] !== 0\r\n      )\r\n        return this.state.B[0][c];\r\n    }\r\n\r\n    for (let r = 0; r < 3; r++) {\r\n      if (\r\n        this.state.B[r][0] === this.state.B[r][1] &&\r\n        this.state.B[r][1] === this.state.B[r][2] &&\r\n        this.state.B[r][2] !== 0\r\n      )\r\n        return this.state.B[r][0];\r\n    }\r\n\r\n    if (\r\n      this.state.B[0][0] === this.state.B[1][1] &&\r\n      this.state.B[1][1] === this.state.B[2][2] &&\r\n      this.state.B[1][1] !== 0\r\n    )\r\n      return this.state.B[0][0];\r\n\r\n    if (\r\n      this.state.B[2][0] === this.state.B[1][1] &&\r\n      this.state.B[1][1] === this.state.B[0][2] &&\r\n      this.state.B[0][2] !== 0\r\n    )\r\n      return this.state.B[2][0];\r\n\r\n    if (\r\n      this.state.invalid_move.length ===\r\n      this.state.num_row * this.state.num_col - 1\r\n    )\r\n      return \"d\";\r\n    return false;\r\n  };\r\n\r\n  handleButtonClick = (row) => {\r\n    // Populate invalid_move to keep track of moves\r\n    this.setState({ invalid_move: [...this.state.invalid_move, row] });\r\n\r\n    // Update clicked button\r\n    this.setState({\r\n      clicked: this.state.clicked.map((click, idx) =>\r\n        idx === row ? true : click\r\n      ),\r\n    });\r\n\r\n    // change current player\r\n    this.setState({\r\n      current_player: this.state.current_player === \"X\" ? \"O\" : \"X\",\r\n    });\r\n\r\n    const [c, r] = [\r\n      row % this.state.num_col,\r\n      Math.floor(row / this.state.num_col),\r\n    ];\r\n\r\n    const newCoord = [...this.state.B];\r\n    newCoord[r][c] = this.state.current_player;\r\n\r\n    this.setState({\r\n      B: newCoord,\r\n    });\r\n\r\n    this.setState({\r\n      players: this.state.players.map((player, idx) =>\r\n        idx !== row ? player : this.state.current_player\r\n      ),\r\n    });\r\n\r\n    this.setState({ disabled: !this.state.disabled });\r\n\r\n    if (this.checkForWinner()) {\r\n      this.setState({ game_over: true });\r\n      this.setState({ clicked: new Array(9).fill(true) });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { num_row, num_col } = this.state;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        {\r\n          <div\r\n            style={{\r\n              transform: this.state.game_over\r\n                ? \"scale(1) translate(-50%, -50%)\"\r\n                : \"scale(0)\",\r\n            }}\r\n            className=\"game-over\"\r\n          >\r\n            Game Over <br />\r\n            <span style={{ fontSize: \"0.6em\" }}>\r\n              {this.checkForWinner() === \"X\"\r\n                ? \"Player X wins\"\r\n                : this.checkForWinner() === \"O\"\r\n                ? \"Player O wins\"\r\n                : \"It is a draw\"}\r\n            </span>\r\n          </div>\r\n        }\r\n        <div\r\n          style={{\r\n            gridTemplateColumns: `repeat(${num_col}, 1fr)`,\r\n            gridTemplateRows: `repeat(${num_row}, 1fr)`,\r\n          }}\r\n          className=\"board\"\r\n        >\r\n          {this.state.rows.map((row) => (\r\n            <button\r\n              key={row}\r\n              className={`cell ${this.state.players[row] && \"dance-anim\"}`}\r\n              disabled={this.state.clicked[row] === true}\r\n              onClick={this.handleButtonClick.bind(this, row)}\r\n            >\r\n              <span style={{ fontSize: `${(5 / num_row) * 3.5}em` }}>\r\n                {this.state.players[row]}\r\n              </span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button\r\n          onClick={() => this.drawBoard()}\r\n          className=\"reset\"\r\n          disabled={!this.state.game_over}\r\n        >\r\n          Reset Board\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Board from \"./components/Board\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Board} />\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}